-revisions_found = false
-sorted_array = reviews.sort {|a,b| b.updated_at <=> a.updated_at }
-sorted_array.each do |review|
  -if review.revision_id != nil
    -revisions_found = true
    -break
-if reviews.empty?
  div.center
    p No reviews
-elsif request.path != reviews_path
  table.clean-table.review-table
    caption.sr-only Reviews for Notebook
    thead
      tr
        th Notebook
        -if revisions_found
          th Revision
        th Review Type
        th Status
        th Reviewer
        th Time
        th Comment
    tbody
      -sorted_array = reviews.sort {|a,b| b.updated_at <=> a.updated_at }
      -sorted_array.each do |review|
        -if !review.notebook.public? && !(@user.admin? || @user.can_edit?(review.notebook))
          -next
        -else
          tr
            td
              -if !review.notebook.public? && (@user.admin? || @user.can_edit?(review.notebook))
                ==image_tag("Lock.png", class: "tagLogoLock tooltips tooltipstered show-inline", title: "This notebook is private", aria: {"hidden": true}, style:"display: none")
                span.sr-only
                  ' Private Notebook
              ==link_to_notebook(review.notebook)
            -if revisions_found
              td
                -if review.revision_id != nil
                  -if review.recent?
                    | Current
                  -else
                    ==link_to_revision(review.revision)
                    i.fa.fa-clock-o.tooltips title="Review is for an older version" style="margin-left: .15em"
                    span.sr-only #{" [Review is for an older version]"}
            td ==GalleryConfig.reviews[review.revtype].label
            td ==link_to(review.status, review_path(review))
            td ==link_to_user(review.reviewer) if review.reviewer
            td ==render partial: "time_ago", locals: {time: review.updated_at}
            -if review.comments.to_s[0..22] == "Automatically nominated"
              td.tooltips.tooltipstered title="#{review.comments}" Automatically nominated
            -else
              td.tooltips.tooltipstered title="#{review.comments}" == truncate(review.comments, length: 100)
-else
  -types_of_review = 0
  -if GalleryConfig.reviews.technical.enabled
    -types_of_review += 1
  -if GalleryConfig.reviews.functional.enabled
    -types_of_review += 1
  -if GalleryConfig.reviews.compliance.enabled
    -types_of_review += 1
  table.clean-table.review-table
    caption.sr-only All Reviews
    thead
      tr
        th rowspan="#{types_of_review}" Notebook
        -if revisions_found
          th.revisions-column rowspan="#{types_of_review}" Revision
        th colspan="#{types_of_review}" Review
        th rowspan="#{types_of_review}" Last Updated
        th rowspan="#{types_of_review}" Last Comment
      tr
        -if GalleryConfig.reviews.technical.enabled
          th style="min-width: unset" ==GalleryConfig.reviews.technical.label.capitalize
        -if GalleryConfig.reviews.functional.enabled
          th style="min-width: unset" ==GalleryConfig.reviews.functional.label.capitalize
        -if GalleryConfig.reviews.compliance.enabled
          th style="min-width: unset" ==GalleryConfig.reviews.compliance.label.capitalize
    tbody
      -index = 0; foundMultiples = false;
      -if GalleryConfig.notebook_title_parse.parsing_enabled
        -sorted_array = reviews.order(:created_at).sort {|a,b| a.notebook.title.partition(GalleryConfig.notebook_title_parse.after_character)[2].downcase <=> b.notebook.title.partition(GalleryConfig.notebook_title_parse.after_character)[2].downcase }
      -else
        -sorted_array = reviews.order(:created_at).sort {|a,b| a.notebook.title.downcase <=> b.notebook.title.downcase }
      -while index < sorted_array.length
        -if !sorted_array[index].notebook.public? && !(@user.admin? || @user.can_edit?(sorted_array[index].notebook))
          -index += 1
          -next
        -else
          tr
            td
              ==render partial: GalleryConfig.slim.table_row_heading_label, locals: { notebook: sorted_array[index].notebook }
              -if !sorted_array[index].notebook.public? && (@user.admin? || @user.can_edit?(sorted_array[index].notebook))
                ==image_tag("Lock.png", class: "tagLogoLock tooltips tooltipstered show-inline", title: "This notebook is private", aria: {"hidden": true}, style:"display: none")
                span.sr-only
                  ' Private Notebook
              a.review-page-title href="#{notebook_path(sorted_array[index].notebook)}" title="#{sorted_array[index].notebook.title}"
                ==render partial: GalleryConfig.slim.table_notebook_title_text_only, locals: { notebook: sorted_array[index].notebook }
            -if revisions_found
              td
                -if sorted_array[index].revision_id != nil
                  -if sorted_array[index].recent?
                    | Current
                  else
                    ==link_to_revision(sorted_array[index].revision)
                    i.fa.fa-clock-o.tooltips title="Review is for an older version" style="margin-left: .15em"
                    span.sr-only #{" [Review is for an older version]"}
            -if index + 1 < sorted_array.length
              -if sorted_array[index].reviewer == nil
                -current_reviewer_name = "Unknown"
              -else
                -current_reviewer_name = "#{sorted_array[index].reviewer.first_name} #{sorted_array[index].reviewer.last_name}"
              -if sorted_array[index+1].reviewer == nil
                -next_reviewer_name = "Unknown"
              -else
                -next_reviewer_name = "#{sorted_array[index+1].reviewer.first_name} #{sorted_array[index+1].reviewer.last_name}"

              /* Checks if all 3 types of revisions exist COMPLETE */
              -if sorted_array[index].notebook_id == sorted_array[index+1].notebook_id && sorted_array[index].revision_id == sorted_array[index+1].revision_id
                -if sorted_array[index].revtype == "technical"
                  td
                    a.tooltip-right.tooltipstered href="#{review_path(sorted_array[index])}" title=(sorted_array[index].status != "queued" ? "#{sorted_array[index].status.capitalize} by #{current_reviewer_name} on #{sorted_array[index].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}" : "Queued on #{sorted_array[index].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}")
                      ==sorted_array[index].status
                -elsif sorted_array[index+1].revtype == "technical"
                  td
                    a.tooltip-right.tooltipstered href="#{review_path(sorted_array[index+1])}" title=(sorted_array[index+1].status != "queued" ? "#{sorted_array[index+1].status.capitalize} by #{next_reviewer_name} on #{sorted_array[index+1].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}" : "Queued on #{sorted_array[index+1].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}")
                      ==sorted_array[index+1].status
                  -elsif sorted_array[index+2].revtype == "technical"
                    td
                      a.tooltip-right.tooltipstered href="#{review_path(sorted_array[index+2])}" title=(sorted_array[index+2].status != "queued" ? "#{sorted_array[index+2].status.capitalize} by #{next_reviewer_name} on #{sorted_array[index+2].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}" : "Queued on #{sorted_array[index+2].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}")
                        ==sorted_array[index+2].status
                -if sorted_array[index].revtype == "functional"
                  td
                    a.tooltip-right.tooltipstered href="#{review_path(sorted_array[index])}" title=(sorted_array[index].status != "queued" ? "#{sorted_array[index].status.capitalize} by #{current_reviewer_name} on #{sorted_array[index].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}" : "Queued on #{sorted_array[index].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}")
                      ==sorted_array[index].status
                -elsif sorted_array[index+1].revtype == "functional"
                  td
                    a.tooltip-right.tooltipstered href="#{review_path(sorted_array[index+1])}" title=(sorted_array[index+1].status != "queued" ? "#{sorted_array[index+1].status.capitalize} by #{next_reviewer_name} on #{sorted_array[index+1].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}" : "Queued on #{sorted_array[index+1].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}")
                      ==sorted_array[index+1].status
                -elsif sorted_array[index+2].revtype == "functional"
                  td
                    a.tooltip-right.tooltipstered href="#{review_path(sorted_array[index+2])}" title=(sorted_array[index+2].status != "queued" ? "#{sorted_array[index+2].status.capitalize} by #{next_reviewer_name} on #{sorted_array[index+2].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}" : "Queued on #{sorted_array[index+2].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}")
                      ==sorted_array[index+2].status
                -if sorted_array[index].revtype == "compliance"
                  td
                    a.tooltip-right.tooltipstered href="#{review_path(sorted_array[index])}" title=(sorted_array[index].status != "queued" ? "#{sorted_array[index].status.capitalize} by #{current_reviewer_name} on #{sorted_array[index].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}" : "Queued on #{sorted_array[index].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}")
                      ==sorted_array[index].status
                -elsif sorted_array[index+1].revtype == "compliance"
                  td
                    a.tooltip-right.tooltipstered href="#{review_path(sorted_array[index+1])}" title=(sorted_array[index+1].status != "queued" ? "#{sorted_array[index+1].status.capitalize} by #{next_reviewer_name} on #{sorted_array[index+1].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}" : "Queued on #{sorted_array[index+1].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}")
                      ==sorted_array[index+1].status
                -elsif sorted_array[index+2].revtype == "compliance"
                  td
                    a.tooltip-right.tooltipstered href="#{review_path(sorted_array[index+2])}" title=(sorted_array[index+2].status != "queued" ? "#{sorted_array[index+2].status.capitalize} by #{next_reviewer_name} on #{sorted_array[index+2].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}" : "Queued on #{sorted_array[index+2].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}")
                      ==sorted_array[index+2].status
                -foundMultiples = true;

                /* Checks if the notebook has more than one review for the given revision */
                -if sorted_array[index].notebook_id == sorted_array[index+1].notebook_id && sorted_array[index].revision_id == sorted_array[index+1].revision_id
                  -if sorted_array[index].revtype == "technical"
                    td
                      a.tooltip-right.tooltipstered href="#{review_path(sorted_array[index])}" title=(sorted_array[index].status != "queued" ? "#{sorted_array[index].status.capitalize} by #{current_reviewer_name} on #{sorted_array[index].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}" : "Queued on #{sorted_array[index].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}")
                        ==sorted_array[index].status
                  -elsif sorted_array[index+1].revtype == "technical"
                    td
                      a.tooltip-right.tooltipstered href="#{review_path(sorted_array[index+1])}" title=(sorted_array[index+1].status != "queued" ? "#{sorted_array[index+1].status.capitalize} by #{next_reviewer_name} on #{sorted_array[index+1].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}" : "Queued on #{sorted_array[index+1].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}")
                        ==sorted_array[index+1].status
                    -elsif sorted_array[index+2].revtype == "technical"
                      td
                        a.tooltip-right.tooltipstered href="#{review_path(sorted_array[index+2])}" title=(sorted_array[index+2].status != "queued" ? "#{sorted_array[index+2].status.capitalize} by #{next_reviewer_name} on #{sorted_array[index+2].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}" : "Queued on #{sorted_array[index+2].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}")
                          ==sorted_array[index+2].status
                  -if sorted_array[index].revtype == "functional"
                    td
                      a.tooltip-right.tooltipstered href="#{review_path(sorted_array[index])}" title=(sorted_array[index].status != "queued" ? "#{sorted_array[index].status.capitalize} by #{current_reviewer_name} on #{sorted_array[index].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}" : "Queued on #{sorted_array[index].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}")
                        ==sorted_array[index].status
                  -elsif sorted_array[index+1].revtype == "functional"
                    td
                      a.tooltip-right.tooltipstered href="#{review_path(sorted_array[index+1])}" title=(sorted_array[index+1].status != "queued" ? "#{sorted_array[index+1].status.capitalize} by #{next_reviewer_name} on #{sorted_array[index+1].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}" : "Queued on #{sorted_array[index+1].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}")
                        ==sorted_array[index+1].status
                  -elsif sorted_array[index+2].revtype == "functional"
                    td
                      a.tooltip-right.tooltipstered href="#{review_path(sorted_array[index+2])}" title=(sorted_array[index+2].status != "queued" ? "#{sorted_array[index+2].status.capitalize} by #{next_reviewer_name} on #{sorted_array[index+2].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}" : "Queued on #{sorted_array[index+2].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}")
                        ==sorted_array[index+2].status
                  -if sorted_array[index].revtype == "compliance"
                    td
                      a.tooltip-right.tooltipstered href="#{review_path(sorted_array[index])}" title=(sorted_array[index].status != "queued" ? "#{sorted_array[index].status.capitalize} by #{current_reviewer_name} on #{sorted_array[index].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}" : "Queued on #{sorted_array[index].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}")
                        ==sorted_array[index].status
                  -elsif sorted_array[index+1].revtype == "compliance"
                    td
                      a.tooltip-right.tooltipstered href="#{review_path(sorted_array[index+1])}" title=(sorted_array[index+1].status != "queued" ? "#{sorted_array[index+1].status.capitalize} by #{next_reviewer_name} on #{sorted_array[index+1].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}" : "Queued on #{sorted_array[index+1].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}")
                        ==sorted_array[index+1].status
                  -elsif sorted_array[index+2].revtype == "compliance"
                    td
                      a.tooltip-right.tooltipstered href="#{review_path(sorted_array[index+2])}" title=(sorted_array[index+2].status != "queued" ? "#{sorted_array[index+2].status.capitalize} by #{next_reviewer_name} on #{sorted_array[index+2].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}" : "Queued on #{sorted_array[index+2].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}")
                        ==sorted_array[index+2].status
                  -foundMultiples = true;

              /* What to do if only one review exists for that notebook version */
              -else
                -if sorted_array[index].revtype == "technical"
                  td
                    a.tooltip-right.tooltipstered href="#{review_path(sorted_array[index])}" title=(sorted_array[index].status != "queued" ? "#{sorted_array[index].status.capitalize} by #{current_reviewer_name} on #{sorted_array[index].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}" : "Queued on #{sorted_array[index].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}")
                      ==sorted_array[index].status
                  td
                -elsif sorted_array[index].revtype == "functional"
                  td
                  td
                    a.tooltip-right.tooltipstered href="#{review_path(sorted_array[index])}" title=(sorted_array[index].status != "queued" ? "#{sorted_array[index].status.capitalize} by #{current_reviewer_name} on #{sorted_array[index].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}" : "Queued on #{sorted_array[index].updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}")
                      ==sorted_array[index].status
            -else
              td
              td
            td ==render partial: "time_ago", locals: {time: sorted_array[index].updated_at}
            -if sorted_array[index].comments.to_s[0..22] == "Automatically nominated"
              td.tooltips.tooltipstered title="#{sorted_array[index].comments}" Automatically nominated
            -else
              td.tooltips.tooltipstered title="#{sorted_array[index].comments}" == truncate(sorted_array[index].comments, length: 100)
            -if foundMultiples
              -index += types_of_review
              -foundMultiples = true
            -else
              -index += 1
            -foundMultiples = false;

-if false
  table.clean-table.review-table
    caption.sr-only Reviews for Notebook
    thead
      tr
        th Notebook
        -if revisions_found
          th Revision
        th Review Type
        th Status
        th Reviewer
        th Time
        th Comment
    tbody
      -index = 0;
      -sorted_array = reviews.order(:created_at).sort {|a,b| a.notebook.title.downcase <=> b.notebook.title.downcase }
      -while index < sorted_array.length
        -if !sorted_array[index].notebook.public? && !(@user.admin? || @user.can_edit?(sorted_array[index].notebook))
          -index += 1
          -next
        -else
          -index += 1
          tr
            td ==link_to_notebook(sorted_array[index].notebook)
            -if revisions_found
              td
                -if sorted_array[index].revision_id != nil
                  -if sorted_array[index].recent?
                    | Current
                  -else
                    ==link_to_revision(sorted_array[index].revision)
                    i.fa.fa-clock-o.tooltips title="Review is for an older version" style="margin-left: .15em"
                    span.sr-only #{" [Review is for an older version]"}
            td ==GalleryConfig.reviews[sorted_array[index].revtype].label
            td ==link_to(sorted_array[index].status, review_path(sorted_array[index]))
            td ==link_to_user(sorted_array[index].reviewer) if sorted_array[index].reviewer
            td ==render partial: "time_ago", locals: {time: sorted_array[index].updated_at}
            -if sorted_array[index].comments.to_s[0..22] == "Automatically nominated"
              td.tooltips.tooltipstered title="#{sorted_array[index].comments}" Automatically nominated
            -else
              td.tooltips.tooltipstered title="#{sorted_array[index].comments}" == truncate(sorted_array[index].comments, length: 100)
